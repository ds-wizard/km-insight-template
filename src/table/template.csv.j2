{%- set dc = ctx|to_context_obj -%}
{%- macro renderExpert(expert, parent, pathPrefix, humanIdentifier) %}
  {%- set path = pathPrefix ~ "." ~ expert.uuid %}
  {{humanIdentifier}},{{expert.uuid}},expert,{{expert.name}},{{expert.email}},,,,{{parent}},{{path}}
{%- endmacro -%}
{%- macro renderReference(reference, parent, pathPrefix, humanIdentifier) %}
  {%- set path = pathPrefix ~ "." ~ reference.uuid %}
  {%- if reference is of_type("URLReference") -%}
    {%- set label = reference.label -%}
    {%- set url = reference.url -%}
    {%- set type = "url" %}
  {%- elif reference is of_type("ResourcePageReference") -%}
    {%- set label = reference.short_uuid -%}
    {%- set url = dc.config.client_url ~ "/book-references/" ~ reference.short_uuid -%}
    {%- set type = "resource-page" %}
  {%- else -%}
    {%- set label = reference.target_uuid -%}
    {%- set url = reference.target_uuid -%}
    {%- set type = "cross-reference" %}
  {%- endif -%}
  {{humanIdentifier}},{{reference.uuid}},reference,{{label}},{{url}},{{type}},,,{{parent}},{{path}}
{%- endmacro -%}
{%- macro renderChoice(choice, parent, pathPrefix, humanIdentifier) %}
  {%- set path = pathPrefix ~ "." ~ choice.uuid %}
  {{humanIdentifier}},{{choice.uuid}},choice,{{choice.label|e}},,,,,{{parent}},{{path}}
{%- endmacro -%}
{%- macro renderAnswer(answer, parent, pathPrefix, humanIdentifier) %}
  {%- set path = pathPrefix ~ "." ~ answer.uuid %}
  {{humanIdentifier}},{{answer.uuid}},answer,{{answer.label|tojson}},{% if answer.advice %}{{answer.advice|tojson}}{% endif %},,{{answer.followups|length}},{%- if answer.metric_measures|length > 0 -%}metrics:{%- for m in answer.metric_measures -%}({{m.metric.uuid}}:{{m.weight}}:{{m.measure}}){%- endfor -%}{%- endif -%},{{parent}},{{path}}
  {%- for question in answer.followups -%}
    {{ renderQuestion(question, answer.uuid, path, humanIdentifier ~ "." ~ loop.index) }}
  {%- endfor -%}
{%- endmacro -%}
{%- macro renderQuestion(question, parent, pathPrefix, humanIdentifier) %}
  {%- set path = pathPrefix ~ "." ~ question.uuid %}
  {%- set followups = 0 %}
  {%- set qtype = "string" %}
  {%- if question is of_type("OptionsQuestion") %}
    {%- set followups = question.answers|length %}
    {%- set qtype = "options" %}
  {%- elif question is of_type("ListQuestion") %}
    {%- set followups = question.followups|length %}
    {%- set qtype = "list" %}
  {%- elif question is of_type("ValueQuestion") %}
    {%- if question.value_type == "TextQuestionValueType" %}
      {%- set qtype = "text" %}
    {%- elif question.value_type == "DateQuestionValueType" %}
      {%- set qtype = "date" %}
    {%- elif question.value_type == "NumberQuestionValueType" %}
      {%- set qtype = "number" %}
    {%- endif %}
  {%- elif question is of_type("IntegrationQuestion") %}
    {%- set qtype = "integration" %}
  {%- endif %}
  {{humanIdentifier}},{{question.uuid}},question,{{question.title|tojson}},{% if question.text %}{{question.text|tojson}}{% endif %},{{qtype}},{{followups}},{%- if question.required_phase -%}phase:{{question.required_phase.uuid}}{%- endif -%},{{parent}},{{path}}
  {%- for expert in question.experts -%}
    {{ renderExpert(expert, question.uuid, path, humanIdentifier ~ ".E-" ~ loop.index) }}
  {%- endfor %}
  {%- for reference in question.references -%}
    {{ renderReference(reference, question.uuid, path, humanIdentifier ~ ".R-" ~ loop.index) }}
  {%- endfor %}
  {%- if question is of_type("OptionsQuestion") %}
    {%- for answer in question.answers -%}
      {{ renderAnswer(answer, question.uuid, path, humanIdentifier ~ "." ~ loop.index|of_alphabet) }}
    {%- endfor %}
  {%- elif question is of_type("MultiChoiceQuestion") %}
    {%- for choice in question.choices -%}
      {{ renderChoice(choice, question.uuid, path, humanIdentifier ~ "." ~ loop.index|of_alphabet) }}
    {%- endfor %}
  {%- elif question is of_type("ListQuestion") %}
    {%- for q in question.followups -%}
      {{ renderQuestion(q, question.uuid, path ~ ".{item}", humanIdentifier ~ "._." ~ loop.index) }}
    {%- endfor -%}
  {%- endif -%}
{%- endmacro -%}
{%- macro renderChapter(chapter, humanIdentifier) %}
  {{humanIdentifier|roman}},{{chapter.uuid}},chapter,{{chapter.title|tojson}},{{chapter.text|tojson}},,{{chapter.questions|length}},{{dc.pkg.id}},{{chapter.uuid}}
  {%- for question in chapter.questions -%}
    {{ renderQuestion(question, chapter.uuid, chapter.uuid, humanIdentifier|roman ~ "." ~ loop.index) }}
  {%- endfor -%}
{%- endmacro -%}
{%- macro renderMetric(metric) %}
  {{metric.abbreviation}},{{metric.uuid}},metric,{{metric.title|tojson}},{% if metric.description %}{{metric.description|tojson}}{% endif %},,,,{{dc.pkg.id}},-
{%- endmacro -%}
{%- macro renderPhase(phase, index) %}
  phase-{{index}},{{phase.uuid}},phase,{{phase.title|tojson}},{% if phase.description %}{{phase.description|tojson}}{% endif %},,,,{{dc.pkg.id}},-
{%- endmacro -%}
humanIdentifier,uuid,type,title,description,subtype,followups,extra,parent,path
{%- for chapter in dc.km.chapters -%}
  {{ renderChapter(chapter, loop.index) }}
{%- endfor %}
{%- for p in dc.km.phase_uuids -%}
  {# dc.km.phases is empty for the time being: bug in context.py for KnowledgeModel #}
  {% set phase = dc.km.e.phases[p] %}
  {{ renderPhase(phase, loop.index) }}
{%- endfor %}
{%- for metric in dc.km.metrics -%}
  {{ renderMetric(metric) }}
{%- endfor %}
